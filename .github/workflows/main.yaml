# This is a basic workflow to help you get started with Actions

name: main-workflow

# Controls when the workflow will run
on:
  # [push]
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tkinter
      # - name: Analysing the code with pylint
      #   run: |
      #     pylint $(git ls-files '*.py') --max-line-length 120
      # - name: Fix No module named 'mpl_toolkits.basemap'
      #   run: |
      #     wget https://github.com/matplotlib/basemap/archive/refs/heads/master.zip;
      #     unzip master.zip;
      #     cd basemap-master/packages/basemap;
      #     python3 -m pip install .;
      - name: Running tests
        run: |
          echo $(git ls-files 'test*.py' '*/test*.py')
          for filename in $(git ls-files 'test*.py' '*/test*.py'); do
          python3 $filename;
          done